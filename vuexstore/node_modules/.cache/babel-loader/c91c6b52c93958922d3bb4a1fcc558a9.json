{"remainingRequest":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\src\\utils\\store.js","dependencies":[{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\src\\utils\\store.js","mtime":1563451345854},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    items: null,\n    searchText: '',\n    searchedList: []\n  },\n  mutations: {\n    SET_ITEMS: function SET_ITEMS(state, items) {\n      state.items = items;\n      console.log(items);\n    },\n    SET_SEARCH: function SET_SEARCH(state, keyWords, items) {\n      console.log(keyWords); //keyWords\n      //         let filter = keyWords.toUpperCase();\n      //           for(let i=0; i < state.items.length; i++) {\n      //             if(keyWords.toUpperCase().indexOf(filter)) {\n      //               return filter\n      //       }\n      //        console.log(filter)\n      //  }\n    },\n    SET_SEARCHPRODUCTS: function SET_SEARCHPRODUCTS(state, items) {\n      console.log(items);\n    }\n  },\n  getters: {\n    items: function items(state) {\n      return state.items;\n    }\n  },\n  actions: {\n    getSearch: function getSearch(context, payload) {\n      console.log(payload);\n      context.commit('getSearch', payload);\n    }\n  }\n});",{"version":3,"sources":["C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\src\\utils\\store.js"],"names":["Vue","Vuex","use","Store","state","items","searchText","searchedList","mutations","SET_ITEMS","console","log","SET_SEARCH","keyWords","SET_SEARCHPRODUCTS","getters","actions","getSearch","context","payload","commit"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AACA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC1BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,IADJ;AAEHC,IAAAA,UAAU,EAAE,EAFT;AAGHC,IAAAA,YAAY,EAAE;AAHX,GADmB;AAMxBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,mBAACL,KAAD,EAAQC,KAAR,EAAkB;AAC3BD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACCK,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACD,KAJO;AAKRO,IAAAA,UAAU,EAAE,oBAACR,KAAD,EAAQS,QAAR,EAAkBR,KAAlB,EAA4B;AACtCK,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ,EADsC,CAGtC;AACP;AACA;AAEA;AACA;AACA;AACA;AACA;AACM,KAjBO;AAkBRC,IAAAA,kBAAkB,EAAC,4BAACV,KAAD,EAAOC,KAAP,EAAiB;AACnCK,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA;AApBO,GANa;AA4BxBU,EAAAA,OAAO,EAAE;AACPV,IAAAA,KAAK,EAAE,eAAAD,KAAK;AAAA,aAAIA,KAAK,CAACC,KAAV;AAAA;AADL,GA5Be;AA+BxBW,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,mBAACC,OAAD,EAAUC,OAAV,EAAsB;AAC/BT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACAD,MAAAA,OAAO,CAACE,MAAR,CAAe,WAAf,EAA4BD,OAA5B;AACD;AAJM;AA/Be,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nVue.use(Vuex);\r\nexport default new Vuex.Store({\r\n    state: {\r\n        items: null,\r\n        searchText: '',\r\n        searchedList: []\r\n      },\r\n      mutations: {\r\n        SET_ITEMS: (state, items) => {\r\n          state.items = items\r\n           console.log(items)\r\n         },\r\n         SET_SEARCH: (state, keyWords, items) => {\r\n           console.log(keyWords)\r\n           \r\n           //keyWords\r\n    //         let filter = keyWords.toUpperCase();\r\n    //           for(let i=0; i < state.items.length; i++) {\r\n                \r\n    //             if(keyWords.toUpperCase().indexOf(filter)) {\r\n    //               return filter\r\n    //       }\r\n    //        console.log(filter)\r\n    //  }\r\n         },\r\n         SET_SEARCHPRODUCTS:(state,items) => {\r\n          console.log(items)\r\n         },\r\n      },\r\n      getters: {\r\n        items: state => state.items\r\n       },\r\n      actions: {\r\n        getSearch: (context, payload) => {\r\n          console.log(payload)\r\n          context.commit('getSearch', payload)\r\n        }\r\n       }\r\n});\r\n"]}]}