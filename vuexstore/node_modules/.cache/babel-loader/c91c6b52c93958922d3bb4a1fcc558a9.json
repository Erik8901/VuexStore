{"remainingRequest":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\src\\utils\\store.js","dependencies":[{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\src\\utils\\store.js","mtime":1564052254904},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    items: null,\n    searchText: null,\n    searchedList: null\n  },\n  mutations: {\n    SET_ITEMS: function SET_ITEMS(state, products) {\n      state.items = products;\n      console.log(state.items);\n    },\n    SET_SEARCH: function SET_SEARCH(state, searchedObj, searchedList, searchText) {\n      //console.log(searchedObj)\n      state.searchText = searchedObj.searchWords; //console.log(state.searchText)\n      //keyWords\n      //         let filter = searchedObj.searchWords.toUpperCase();\n      //           for(let i=0; i < searchedObj.allItems.length; i++) {\n      //             if(searchedObj.searchWords.toUpperCase().indexOf(filter)) {\n      //               return filter\n      //       }\n      //        console.log(filter)\n      //  }\n    }\n  },\n  getters: {//items: state => state.items\n  },\n  actions: {\n    getSearch: function getSearch(context, payload) {\n      console.log(payload);\n      context.commit('getSearch', payload);\n    }\n  }\n});",{"version":3,"sources":["C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\src\\utils\\store.js"],"names":["Vue","Vuex","use","Store","state","items","searchText","searchedList","mutations","SET_ITEMS","products","console","log","SET_SEARCH","searchedObj","searchWords","getters","actions","getSearch","context","payload","commit"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AACA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC1BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,IADJ;AAEHC,IAAAA,UAAU,EAAE,IAFT;AAGHC,IAAAA,YAAY,EAAE;AAHX,GADmB;AAMxBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,mBAACL,KAAD,EAAQM,QAAR,EAAqB;AAC7BN,MAAAA,KAAK,CAACC,KAAN,GAAcK,QAAd;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACC,KAAlB;AACH,KAJO;AAKRQ,IAAAA,UAAU,EAAE,oBAACT,KAAD,EAAOU,WAAP,EAAoBP,YAApB,EAAkCD,UAAlC,EAAiD;AAC7D;AACAF,MAAAA,KAAK,CAACE,UAAN,GAAmBQ,WAAW,CAACC,WAA/B,CAF6D,CAG7D;AAGE;AACP;AACA;AAEA;AACA;AACA;AACA;AACA;AACM;AApBO,GANa;AA6BxBC,EAAAA,OAAO,EAAE,CACP;AADO,GA7Be;AAgCxBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,mBAACC,OAAD,EAAUC,OAAV,EAAsB;AAC/BT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACAD,MAAAA,OAAO,CAACE,MAAR,CAAe,WAAf,EAA4BD,OAA5B;AACD;AAJM;AAhCe,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nVue.use(Vuex);\r\nexport default new Vuex.Store({\r\n    state: {\r\n        items: null,\r\n        searchText: null,\r\n        searchedList: null\r\n      },\r\n      mutations: {\r\n        SET_ITEMS: (state, products) => {\r\n           state.items = products\r\n             console.log(state.items)\r\n         },\r\n         SET_SEARCH: (state,searchedObj, searchedList, searchText) => {\r\n         //console.log(searchedObj)\r\n         state.searchText = searchedObj.searchWords\r\n         //console.log(state.searchText)\r\n         \r\n           \r\n           //keyWords\r\n    //         let filter = searchedObj.searchWords.toUpperCase();\r\n    //           for(let i=0; i < searchedObj.allItems.length; i++) {\r\n                \r\n    //             if(searchedObj.searchWords.toUpperCase().indexOf(filter)) {\r\n    //               return filter\r\n    //       }\r\n    //        console.log(filter)\r\n    //  }\r\n         },\r\n        \r\n      },\r\n      getters: {\r\n        //items: state => state.items\r\n       },\r\n      actions: {\r\n        getSearch: (context, payload) => {\r\n          console.log(payload)\r\n          context.commit('getSearch', payload)\r\n        }\r\n       }\r\n});\r\n"]}]}