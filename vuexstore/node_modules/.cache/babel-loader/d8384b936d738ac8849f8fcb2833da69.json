{"remainingRequest":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\src\\components\\Products\\ProductPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\src\\components\\Products\\ProductPage.vue","mtime":1580730380789},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//styles\nimport productsStyles from './styles/productsStyles.css';\nimport axios from 'axios';\nimport store from \"@/utils/store.js\"; //import { mapGetters } from \"vuex\";\n\nexport default {\n  name: 'ProductPage',\n  data: function data() {\n    return {};\n  },\n  computed: {\n    items: function items() {\n      return this.$store.state.items;\n    }\n  },\n  methods: {\n    addToCart: function addToCart(item) {\n      this.$store.commit('SET_CART', {\n        productsCart: item\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(\"products.json\").then(function (response) {\n      _this.$store.commit('SET_ITEMS', response.data);\n\n      _this.products = store.state.items;\n    });\n  }\n};",{"version":3,"sources":["ProductPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA;AACA,OAAA,cAAA,MAAA,6BAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,MAAA,kBAAA,C,CACA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA,EAAA;AAGA,GANA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;AACA;AAHA,GAPA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,mBAAA,IAAA,EAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,UAAA,EAAA;AACA,QAAA,YAAA,EAAA;AADA,OAAA;AAIA;AANA,GAZA;AAoBA,EAAA,OApBA,qBAoBA;AAAA;;AACA,IAAA,KAAA,CACA,GADA,CACA,eADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,WAAA,EAAA,QAAA,CAAA,IAAA;;AACA,MAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AACA,KALA;AAMA;AA3BA,CAAA","sourcesContent":["<template>\r\n  <div class=\"productsPage\">\r\n      \r\n      <ul class=\" productsUl\">\r\n        <li class=\"productsLi\" v-for=\"(item) in items\" :key=\"item.name\" >\r\n            <img class=\"productImg\" :src=\"item.img\"/>\r\n            <p class=\"productName\">{{item.name}}</p>\r\n            <p class=\"productPrice\">Price: {{item.price}}</p>\r\n            <p class=\"info\">{{ item.info }}</p> <hr/>\r\n            <button class=\"addToCart\" @click=\"addToCart(item)\">Add to cart</button>\r\n            <button class=\"getInfo\">Info</button>\r\n        </li>\r\n      </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//styles\r\nimport productsStyles from './styles/productsStyles.css';\r\nimport axios from 'axios'\r\nimport store from \"@/utils/store.js\";\r\n//import { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: 'ProductPage',\r\n    data() {\r\n      return {\r\n        \r\n      }\r\n    },\r\n  computed: {\r\n    items() {\r\n      return this.$store.state.items\r\n    },\r\n  },\r\n  methods: {\r\n    addToCart: function(item) {\r\n     this.$store.commit('SET_CART', {\r\n        productsCart:item\r\n      })\r\n   \r\n    }\r\n},\r\nmounted () {\r\n  axios\r\n      .get(\"products.json\")\r\n      .then(response => {\r\n      this.$store.commit('SET_ITEMS', response.data)\r\n      this.products = store.state.items\r\n      })\r\n  }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n"],"sourceRoot":"src/components/Products"}]}