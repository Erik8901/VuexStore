{"remainingRequest":"C:\\Users\\User\\Desktop\\projects\\VuexStore\\vuexstore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\projects\\VuexStore\\vuexstore\\src\\components\\CheckoutPage\\checkoutPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\projects\\VuexStore\\vuexstore\\src\\components\\CheckoutPage\\checkoutPage.vue","mtime":1591607234438},{"path":"C:\\Users\\User\\Desktop\\projects\\VuexStore\\vuexstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591607220206},{"path":"C:\\Users\\User\\Desktop\\projects\\VuexStore\\vuexstore\\node_modules\\babel-loader\\lib\\index.js","mtime":1591607219772},{"path":"C:\\Users\\User\\Desktop\\projects\\VuexStore\\vuexstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591607220206},{"path":"C:\\Users\\User\\Desktop\\projects\\VuexStore\\vuexstore\\node_modules\\vue-loader\\lib\\index.js","mtime":1591607233278}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n//styles\r\nimport stylesCheckoutPage from './styles/stylesCheckoutPage.css';\r\n\r\nexport default {\r\n  name: 'CheckoutPage',\r\n  data() {\r\n      return {\r\n         productGetInfo: {\r\n          name: '',\r\n          price: 0,\r\n          info: '',\r\n          img: ''\r\n        },\r\n        totalPrice: 0\r\n      }\r\n     },\r\ncomputed: {\r\n    productsCart() {\r\n       return this.$store.state.productsCart\r\n      },\r\n    productsPrice() {\r\n      return this.$store.state.totalPrice\r\n        this.totalPrice = this.$store.state.totalPrice\r\n    }\r\n    },\r\nmounted()  {\r\n  let prices = []  \r\n     for(let i=0; i < this.productsCart.length; i++) {\r\n        let nums = parseInt(this.productsCart[i].price)\r\n          prices.push(nums)\r\n    }\r\n  \r\n  let total = prices.reduce((a, b) => a + b, 0)\r\n      this.$store.commit('SET_TOTAL_PRICE', {\r\n          price: total\r\n    })\r\n    this.totalPrice = this.$store.state.totalPrice\r\n},\r\nmethods: {\r\n    emptyCart() {\r\n        this.$store.state.productsCart = []\r\n    },\r\n    removeProduct(index, product) {\r\n      let newTotal = this.totalPrice - product.price\r\n        this.$store.commit('SET_TOTAL_PRICE', {\r\n          price: newTotal\r\n    })\r\n       this.totalPrice = this.$store.state.totalPrice\r\n      this.$delete(this.$store.state.productsCart, index)\r\n  },\r\n   getProductInfo: function(product) {\r\n        this.productGetInfo.name = product.name\r\n        this.productGetInfo.price = product.price\r\n        this.productGetInfo.info = product.info\r\n        this.productGetInfo.img = product.img\r\n\r\n        this.$store.commit('SET_PRODUCT_INFO', {\r\n          productInfo: this.productGetInfo\r\n    })\r\n  }\r\n  },\r\n}\r\n",{"version":3,"sources":["checkoutPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"checkoutPage.vue","sourceRoot":"src/components/CheckoutPage","sourcesContent":["<template>\r\n  <div class=\"checkout\">\r\n      <h1 class=\"checkout-title\">Checkout</h1>\r\n          <div v-if=\"this.productsCart.length === 0\">\r\n              <h1 class=\"emptyH1\">Your Car is Empty</h1>\r\n          </div>\r\n      <div v-else>\r\n        <div>\r\n            <ul class=\"checkoutUl\">\r\n                <li class=\"checkoutLi\" v-for=\"(product, index) in productsCart\" :key=\"product.name\" @click=\"getProductInfo(product)\">\r\n                    <router-link to=\"/productInfo\" class=\"link-productInfo\" >\r\n                        <img class=\"img\" :src=\"product.img\" @click=\"getProductInfo(product)\"/>\r\n                    </router-link>\r\n                    <span class=\"checkout-name\">{{product.name}}</span>\r\n                    <span class=\"checkout-price\">Price: {{product.price}} €</span>\r\n                    <!-- <span>{{product.type}}</span> -->\r\n                    <router-link to=\"/productInfo\" class=\"link-productInfo\" >\r\n                        <button class=\"checkout-getInfo\" @click=\"getProductInfo(product)\">Info</button>\r\n                    </router-link>\r\n                    <button class=\"removeProduct\" @click=\"removeProduct(index, product)\">X</button>\r\n              </li>\r\n            <button class=\"emptyCart\" @click=\"emptyCart()\">Empty Cart</button>\r\n            <span class=\"totals\">Your Total: {{this.totalPrice}} €</span>\r\n          </ul>\r\n      </div>\r\n    </div><!-- //v-else -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//styles\r\nimport stylesCheckoutPage from './styles/stylesCheckoutPage.css';\r\n\r\nexport default {\r\n  name: 'CheckoutPage',\r\n  data() {\r\n      return {\r\n         productGetInfo: {\r\n          name: '',\r\n          price: 0,\r\n          info: '',\r\n          img: ''\r\n        },\r\n        totalPrice: 0\r\n      }\r\n     },\r\ncomputed: {\r\n    productsCart() {\r\n       return this.$store.state.productsCart\r\n      },\r\n    productsPrice() {\r\n      return this.$store.state.totalPrice\r\n        this.totalPrice = this.$store.state.totalPrice\r\n    }\r\n    },\r\nmounted()  {\r\n  let prices = []  \r\n     for(let i=0; i < this.productsCart.length; i++) {\r\n        let nums = parseInt(this.productsCart[i].price)\r\n          prices.push(nums)\r\n    }\r\n  \r\n  let total = prices.reduce((a, b) => a + b, 0)\r\n      this.$store.commit('SET_TOTAL_PRICE', {\r\n          price: total\r\n    })\r\n    this.totalPrice = this.$store.state.totalPrice\r\n},\r\nmethods: {\r\n    emptyCart() {\r\n        this.$store.state.productsCart = []\r\n    },\r\n    removeProduct(index, product) {\r\n      let newTotal = this.totalPrice - product.price\r\n        this.$store.commit('SET_TOTAL_PRICE', {\r\n          price: newTotal\r\n    })\r\n       this.totalPrice = this.$store.state.totalPrice\r\n      this.$delete(this.$store.state.productsCart, index)\r\n  },\r\n   getProductInfo: function(product) {\r\n        this.productGetInfo.name = product.name\r\n        this.productGetInfo.price = product.price\r\n        this.productGetInfo.info = product.info\r\n        this.productGetInfo.img = product.img\r\n\r\n        this.$store.commit('SET_PRODUCT_INFO', {\r\n          productInfo: this.productGetInfo\r\n    })\r\n  }\r\n  },\r\n}\r\n</script>\r\n\r\n\r\n"]}]}