{"remainingRequest":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\src\\components\\Products\\Products.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\src\\components\\Products\\Products.vue","mtime":1582633189986},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\erikj\\Desktop\\Skola(Kodning)\\vue\\VuexStore\\VuexStore\\vuexstore\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n//styles\r\nimport productsStyles from './styles/productsStyles.css';\r\nimport axios from 'axios'\r\nimport { mapGetters } from \"vuex\";\r\nimport store from \"@/utils/store.js\";\r\n\r\n\r\nexport default {\r\n  name: 'Products',\r\n  props: [\"items\"],\r\n  components: {\r\n    store\r\n  },\r\n  data() {\r\n    return {\r\n      products: [],\r\n         productAddToCart: {\r\n          name: '',\r\n          price: 0,\r\n          type: '',\r\n          img: ''\r\n        }\r\n      \r\n      }\r\n    },\r\n  // computed: {\r\n  //   ...mapGetters({\r\n  //    Items: \"$_Cart/items\",\r\n  //     // cartItemsCount: \"$_Cart/itemsCount\",\r\n  //     // cartTotalPrice: \"$_Cart/totalPrice\",\r\n  //     // loading: \"$_Cart/loading\"\r\n  //   })\r\n  // },\r\n  methods: {\r\n  addToCart: function(product) {\r\n    \r\n     this.productAddToCart.name = product.name\r\n      this.productAddToCart.price = product.price\r\n      this.productAddToCart.type = product.type\r\n      this.productAddToCart.img = product.img\r\n      \r\n      this.$store.commit('SET_CART', {\r\n        productsCart: this.productAddToCart\r\n      })\r\n    }\r\n},\r\n  mounted () {\r\n    axios\r\n      .get(\"products.json\")\r\n      .then(response => {\r\n      this.$store.commit('SET_ITEMS', response.data)\r\n      this.products = store.state.items\r\n      })\r\n},\r\n\r\n}\r\n",{"version":3,"sources":["Products.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Products.vue","sourceRoot":"src/components/Products","sourcesContent":["<template>\r\n  <div class=\"products\">\r\n    <ul id=\"example-1\">\r\n        <li v-for=\"product in products.slice(0,4)\" :key=\"product.name\">\r\n            <img class=\"img\" :src=\"product.img\"/>\r\n                <div class=\"product-info\">\r\n                    <span class=\"product-name\">{{ product.name }}</span>\r\n                    <span class=\"product-text\">{{ product.info }}</span> \r\n                    <span class=\"product-price\">Price: {{ product.price }} â‚¬</span>\r\n                </div>\r\n                <div class=\"btns\">\r\n                    <button class=\"addToCart\" @click=\"addToCart(product)\">Add to cart</button>\r\n                    <button class=\"getInfo\">Info</button>\r\n                </div>\r\n          </li>\r\n    </ul>   \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//styles\r\nimport productsStyles from './styles/productsStyles.css';\r\nimport axios from 'axios'\r\nimport { mapGetters } from \"vuex\";\r\nimport store from \"@/utils/store.js\";\r\n\r\n\r\nexport default {\r\n  name: 'Products',\r\n  props: [\"items\"],\r\n  components: {\r\n    store\r\n  },\r\n  data() {\r\n    return {\r\n      products: [],\r\n         productAddToCart: {\r\n          name: '',\r\n          price: 0,\r\n          type: '',\r\n          img: ''\r\n        }\r\n      \r\n      }\r\n    },\r\n  // computed: {\r\n  //   ...mapGetters({\r\n  //    Items: \"$_Cart/items\",\r\n  //     // cartItemsCount: \"$_Cart/itemsCount\",\r\n  //     // cartTotalPrice: \"$_Cart/totalPrice\",\r\n  //     // loading: \"$_Cart/loading\"\r\n  //   })\r\n  // },\r\n  methods: {\r\n  addToCart: function(product) {\r\n    \r\n     this.productAddToCart.name = product.name\r\n      this.productAddToCart.price = product.price\r\n      this.productAddToCart.type = product.type\r\n      this.productAddToCart.img = product.img\r\n      \r\n      this.$store.commit('SET_CART', {\r\n        productsCart: this.productAddToCart\r\n      })\r\n    }\r\n},\r\n  mounted () {\r\n    axios\r\n      .get(\"products.json\")\r\n      .then(response => {\r\n      this.$store.commit('SET_ITEMS', response.data)\r\n      this.products = store.state.items\r\n      })\r\n},\r\n\r\n}\r\n</script>\r\n\r\n\r\n"]}]}